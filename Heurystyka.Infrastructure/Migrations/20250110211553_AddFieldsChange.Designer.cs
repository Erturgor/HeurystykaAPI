// <auto-generated />
using System;
using Heurystyka.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Heurystyka.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250110211553_AddFieldsChange")]
    partial class AddFieldsChange
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Heurystyka.Domain.AlgorithmParameter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("AlgorithmResultId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ParameterName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("ParameterValue")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("AlgorithmResultId");

                    b.ToTable("AlgorithmParameters", (string)null);
                });

            modelBuilder.Entity("Heurystyka.Domain.AlgorithmResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AlgorithmName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AlgorithmResults", (string)null);
                });

            modelBuilder.Entity("Heurystyka.Domain.ReportMultiple", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ReportMultiples");
                });

            modelBuilder.Entity("Heurystyka.Domain.AlgorithmParameter", b =>
                {
                    b.HasOne("Heurystyka.Domain.AlgorithmResult", null)
                        .WithMany("Parameters")
                        .HasForeignKey("AlgorithmResultId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Heurystyka.Domain.ReportMultiple", b =>
                {
                    b.OwnsMany("Heurystyka.Domain.ReportSingle", "Reports", b1 =>
                        {
                            b1.Property<Guid>("ReportMultipleId")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT");

                            b1.Property<string>("AlgorithmFunction")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("AlgorithmName")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<double>("FBest")
                                .HasColumnType("REAL");

                            b1.Property<string>("Parameters")
                                .HasColumnType("TEXT");

                            b1.Property<string>("XBest")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("ReportMultipleId", "Id");

                            b1.ToTable("ReportSingle");

                            b1.WithOwner()
                                .HasForeignKey("ReportMultipleId");
                        });

                    b.Navigation("Reports");
                });

            modelBuilder.Entity("Heurystyka.Domain.AlgorithmResult", b =>
                {
                    b.Navigation("Parameters");
                });
#pragma warning restore 612, 618
        }
    }
}
